digraph {
	subgraph cluster_1 {
	label = beta
	"BetaNode 0x7f15fa1f0dd8" [label="βroot"];
	"BetaNode 0x7f15fa1f0dd8" -> "BetaMemory 0x7f15fa191630";
	"BetaMemory 0x7f15fa191630" [label="βM"];
	"BetaMemory 0x7f15fa191630" -> "JoinNode 0x7f15fa191710";
	"JoinNode 0x7f15fa191710" [shape=box,color=red,label="J"];
	"JoinNode 0x7f15fa191710" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa1916d8>"
	"(X $y $x)" [style=filled,fillcolor=orange];
	"JoinNode 0x7f15fa191710" -> "(X $y $x)"
	"JoinNode 0x7f15fa191710" -> "BetaMemory 0x7f15fa191748";
	"BetaMemory 0x7f15fa191748" [label="βM"];
	"BetaMemory 0x7f15fa191748" -> "JoinNode 0x7f15fa191780";
	"JoinNode 0x7f15fa191780" [shape=box,color=red,label="J"];
	"JoinNode 0x7f15fa191780" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa1916d8>"
	"(X $z $x)" [style=filled,fillcolor=orange];
	"JoinNode 0x7f15fa191780" -> "(X $z $x)"
	"F3 == 0:F3?" [style=filled,fillcolor=yellow];
	"JoinNode 0x7f15fa191780" -> "F3 == 0:F3?"
	"JoinNode 0x7f15fa191780" -> "BetaMemory 0x7f15fa1917b8";
	"BetaMemory 0x7f15fa1917b8" [label="βM"];
	"BetaMemory 0x7f15fa1917b8" -> "JoinNode 0x7f15fa191908";
	"JoinNode 0x7f15fa191908" [shape=box,color=red,label="J"];
	"JoinNode 0x7f15fa191908" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa191860>"
	"(□ $w $x)" [style=filled,fillcolor=orange];
	"JoinNode 0x7f15fa191908" -> "(□ $w $x)"
	"F3 == 0:F3?" [style=filled,fillcolor=yellow];
	"JoinNode 0x7f15fa191908" -> "F3 == 0:F3?"
	"F3 == 1:F3?" [style=filled,fillcolor=yellow];
	"JoinNode 0x7f15fa191908" -> "F3 == 1:F3?"
	"JoinNode 0x7f15fa191908" -> "BetaMemory 0x7f15fa191940";
	"BetaMemory 0x7f15fa191940" [label="βM"];
	"BetaMemory 0x7f15fa191940" -> "JoinNode 0x7f15fa191978";
	"JoinNode 0x7f15fa191978" [shape=box,color=red,label="J"];
	"0:F2 != 1:F2?" [style=filled,fillcolor=yellow];
	"JoinNode 0x7f15fa191978" -> "0:F2 != 1:F2?"
	"JoinNode 0x7f15fa191978" -> "PNode 0x7f15fa1915f8";
	"PNode 0x7f15fa1915f8" [style=filled,fillcolor=pink,label="p"];
	"BetaMemory 0x7f15fa191630" -> "JoinNode 0x7f15fa191b70";
	"JoinNode 0x7f15fa191b70" [shape=box,color=red,label="J"];
	"JoinNode 0x7f15fa191b70" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa191b38>"
	"(X $x None)" [style=filled,fillcolor=orange];
	"JoinNode 0x7f15fa191b70" -> "(X $x None)"
	"JoinNode 0x7f15fa191b70" -> "BetaMemory 0x7f15fa191ba8";
	"BetaMemory 0x7f15fa191ba8" [label="βM"];
	"BetaMemory 0x7f15fa191ba8" -> "JoinNode 0x7f15fa191be0";
	"JoinNode 0x7f15fa191be0" [shape=box,color=red,label="J"];
	"JoinNode 0x7f15fa191be0" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa191b38>"
	"(X $y None)" [style=filled,fillcolor=orange];
	"JoinNode 0x7f15fa191be0" -> "(X $y None)"
	"JoinNode 0x7f15fa191be0" -> "BetaMemory 0x7f15fa191c18";
	"BetaMemory 0x7f15fa191c18" [label="βM"];
	"BetaMemory 0x7f15fa191c18" -> "JoinNode 0x7f15fa191cc0";
	"JoinNode 0x7f15fa191cc0" [shape=box,color=red,label="J"];
	"JoinNode 0x7f15fa191cc0" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa191c88>"
	"(□ $z None)" [style=filled,fillcolor=orange];
	"JoinNode 0x7f15fa191cc0" -> "(□ $z None)"
	"JoinNode 0x7f15fa191cc0" -> "BetaMemory 0x7f15fa191cf8";
	"BetaMemory 0x7f15fa191cf8" [label="βM"];
	"BetaMemory 0x7f15fa191cf8" -> "JoinNode 0x7f15fa191e10";
	"JoinNode 0x7f15fa191e10" [shape=box,color=red,label="J"];
	"JoinNode 0x7f15fa191e10" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa191d68>"
	"(samerow $x $y)" [style=filled,fillcolor=orange];
	"JoinNode 0x7f15fa191e10" -> "(samerow $x $y)"
	"F2 == 0:F2?" [style=filled,fillcolor=yellow];
	"JoinNode 0x7f15fa191e10" -> "F2 == 0:F2?"
	"F3 == 1:F2?" [style=filled,fillcolor=yellow];
	"JoinNode 0x7f15fa191e10" -> "F3 == 1:F2?"
	"JoinNode 0x7f15fa191e10" -> "BetaMemory 0x7f15fa191e48";
	"BetaMemory 0x7f15fa191e48" [label="βM"];
	"BetaMemory 0x7f15fa191e48" -> "JoinNode 0x7f15fa191e80";
	"JoinNode 0x7f15fa191e80" [shape=box,color=red,label="J"];
	"JoinNode 0x7f15fa191e80" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa191d68>"
	"(samerow $y $z)" [style=filled,fillcolor=orange];
	"JoinNode 0x7f15fa191e80" -> "(samerow $y $z)"
	"F2 == 1:F2?" [style=filled,fillcolor=yellow];
	"JoinNode 0x7f15fa191e80" -> "F2 == 1:F2?"
	"F2 == 3:F3?" [style=filled,fillcolor=yellow];
	"JoinNode 0x7f15fa191e80" -> "F2 == 3:F3?"
	"F3 == 2:F2?" [style=filled,fillcolor=yellow];
	"JoinNode 0x7f15fa191e80" -> "F3 == 2:F2?"
	"JoinNode 0x7f15fa191e80" -> "PNode 0x7f15fa191ac8";
	"PNode 0x7f15fa191ac8" [style=filled,fillcolor=pink,label="p"];
	"BetaMemory 0x7f15fa191630" -> "JoinNode 0x7f15fa1990b8";
	"JoinNode 0x7f15fa1990b8" [shape=box,color=red,label="J"];
	"JoinNode 0x7f15fa1990b8" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa199080>"
	"(π1 $x $x1)" [style=filled,fillcolor=orange];
	"JoinNode 0x7f15fa1990b8" -> "(π1 $x $x1)"
	"JoinNode 0x7f15fa1990b8" -> "BetaMemory 0x7f15fa1990f0";
	"BetaMemory 0x7f15fa1990f0" [label="βM"];
	"BetaMemory 0x7f15fa1990f0" -> "JoinNode 0x7f15fa199128";
	"JoinNode 0x7f15fa199128" [shape=box,color=red,label="J"];
	"JoinNode 0x7f15fa199128" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa199080>"
	"(π1 $y $y1)" [style=filled,fillcolor=orange];
	"JoinNode 0x7f15fa199128" -> "(π1 $y $y1)"
	"JoinNode 0x7f15fa199128" -> "PNode 0x7f15fa191fd0";
	"PNode 0x7f15fa191fd0" [style=filled,fillcolor=pink,label="p"];
	}
	subgraph cluster_0 {
	label = alpha
	"no-test" -> "F1==X";
	"F1==X" -> "F3==None";
	"F3==None" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa191b38>";
	"⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa191b38>" [shape=box, style="rounded,filled", label="⍺M", fillcolor=gray];
	"F1==X" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa1916d8>";
	"⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa1916d8>" [shape=box, style="rounded,filled", label="⍺M", fillcolor=gray];
	"no-test" -> "F1==□";
	"F1==□" -> "F3==None";
	"F3==None" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa191c88>";
	"⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa191c88>" [shape=box, style="rounded,filled", label="⍺M", fillcolor=gray];
	"F1==□" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa191860>";
	"⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa191860>" [shape=box, style="rounded,filled", label="⍺M", fillcolor=gray];
	"no-test" -> "F1==samerow";
	"F1==samerow" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa191d68>";
	"⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa191d68>" [shape=box, style="rounded,filled", label="⍺M", fillcolor=gray];
	"no-test" -> "F1==π1";
	"F1==π1" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa199080>";
	"⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa199080>" [shape=box, style="rounded,filled", label="⍺M", fillcolor=gray];
	"no-test" -> "⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa1f0cf8>";
	"⍺M:<rete.alpha.AlphaMemory object at 0x7f15fa1f0cf8>" [shape=box, style="rounded,filled", label="⍺M", fillcolor=gray];
	}
	"F1==X" -> "JoinNode 0x7f15fa191710" [color=gray];
	"F1==X" -> "JoinNode 0x7f15fa191780" [color=gray];
	"F3==None" -> "JoinNode 0x7f15fa191b70" [color=gray];
	"F3==None" -> "JoinNode 0x7f15fa191be0" [color=gray];
	"F1==□" -> "JoinNode 0x7f15fa191908" [color=gray];
	"F3==None" -> "JoinNode 0x7f15fa191cc0" [color=gray];
	"F1==samerow" -> "JoinNode 0x7f15fa191e10" [color=gray];
	"F1==samerow" -> "JoinNode 0x7f15fa191e80" [color=gray];
	"F1==π1" -> "JoinNode 0x7f15fa1990b8" [color=gray];
	"F1==π1" -> "JoinNode 0x7f15fa199128" [color=gray];
}